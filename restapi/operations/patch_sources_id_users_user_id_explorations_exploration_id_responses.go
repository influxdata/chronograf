package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/influxdata/mrfusion/models"
)

/*PatchSourcesIDUsersUserIDExplorationsExplorationIDNoContent Exploration's configuration was changed

swagger:response patchSourcesIdUsersUserIdExplorationsExplorationIdNoContent
*/
type PatchSourcesIDUsersUserIDExplorationsExplorationIDNoContent struct {
}

// NewPatchSourcesIDUsersUserIDExplorationsExplorationIDNoContent creates PatchSourcesIDUsersUserIDExplorationsExplorationIDNoContent with default headers values
func NewPatchSourcesIDUsersUserIDExplorationsExplorationIDNoContent() *PatchSourcesIDUsersUserIDExplorationsExplorationIDNoContent {
	return &PatchSourcesIDUsersUserIDExplorationsExplorationIDNoContent{}
}

// WriteResponse to the client
func (o *PatchSourcesIDUsersUserIDExplorationsExplorationIDNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(204)
}

/*PatchSourcesIDUsersUserIDExplorationsExplorationIDNotFound Data source id, user, or exploration does not exist.

swagger:response patchSourcesIdUsersUserIdExplorationsExplorationIdNotFound
*/
type PatchSourcesIDUsersUserIDExplorationsExplorationIDNotFound struct {

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewPatchSourcesIDUsersUserIDExplorationsExplorationIDNotFound creates PatchSourcesIDUsersUserIDExplorationsExplorationIDNotFound with default headers values
func NewPatchSourcesIDUsersUserIDExplorationsExplorationIDNotFound() *PatchSourcesIDUsersUserIDExplorationsExplorationIDNotFound {
	return &PatchSourcesIDUsersUserIDExplorationsExplorationIDNotFound{}
}

// WithPayload adds the payload to the patch sources Id users user Id explorations exploration Id not found response
func (o *PatchSourcesIDUsersUserIDExplorationsExplorationIDNotFound) WithPayload(payload *models.Error) *PatchSourcesIDUsersUserIDExplorationsExplorationIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the patch sources Id users user Id explorations exploration Id not found response
func (o *PatchSourcesIDUsersUserIDExplorationsExplorationIDNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PatchSourcesIDUsersUserIDExplorationsExplorationIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*PatchSourcesIDUsersUserIDExplorationsExplorationIDDefault A processing or an unexpected error.

swagger:response patchSourcesIdUsersUserIdExplorationsExplorationIdDefault
*/
type PatchSourcesIDUsersUserIDExplorationsExplorationIDDefault struct {
	_statusCode int

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewPatchSourcesIDUsersUserIDExplorationsExplorationIDDefault creates PatchSourcesIDUsersUserIDExplorationsExplorationIDDefault with default headers values
func NewPatchSourcesIDUsersUserIDExplorationsExplorationIDDefault(code int) *PatchSourcesIDUsersUserIDExplorationsExplorationIDDefault {
	if code <= 0 {
		code = 500
	}

	return &PatchSourcesIDUsersUserIDExplorationsExplorationIDDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the patch sources ID users user ID explorations exploration ID default response
func (o *PatchSourcesIDUsersUserIDExplorationsExplorationIDDefault) WithStatusCode(code int) *PatchSourcesIDUsersUserIDExplorationsExplorationIDDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the patch sources ID users user ID explorations exploration ID default response
func (o *PatchSourcesIDUsersUserIDExplorationsExplorationIDDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the patch sources ID users user ID explorations exploration ID default response
func (o *PatchSourcesIDUsersUserIDExplorationsExplorationIDDefault) WithPayload(payload *models.Error) *PatchSourcesIDUsersUserIDExplorationsExplorationIDDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the patch sources ID users user ID explorations exploration ID default response
func (o *PatchSourcesIDUsersUserIDExplorationsExplorationIDDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PatchSourcesIDUsersUserIDExplorationsExplorationIDDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
