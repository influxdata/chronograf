version: 2.1
orbs:
  browser-tools: circleci/browser-tools@1.1.3
  aws-s3: circleci/aws-s3@2.0.0


workflows:
  version: 2
  main:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
      - deploy-nightly:
          requires:
            - build
          filters:
            branches:
              only: master
      - deploy-pre-release:
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^[0-9]+(\.[0-9]+)*(\S*)([a|rc|beta]([0-9]+))+$/
      - packages-sign:
          name: packages-sign-prerelease
          requires:
            - deploy-pre-release
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^[0-9]+(\.[0-9]+)*(\S*)([a|rc|beta]([0-9]+))+$/
      - packages-upload-signatures:
          requires:
            - packages-sign-prerelease
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^[0-9]+(\.[0-9]+)*(\S*)([a|rc|beta]([0-9]+))+$/
      - deploy-release:
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^[0-9]+(\.[0-9]+)*$/
      - packages-sign:
          name: packages-sign-release
          requires:
            - deploy-release
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^[0-9]+(\.[0-9]+)*$/
      - packages-upload-signatures:
          requires:
            - packages-sign-release
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^[0-9]+(\.[0-9]+)*$/

jobs:
  build:
    environment:
      DOCKER_TAG: chronograf-20240919
      GO111MODULE: "ON"
    machine:
      image: ubuntu-2204:current
    steps:
      - checkout
      - run: |
          ls -lah
          pwd
      - run: ./etc/scripts/docker/pull.sh
      - run:
          name: "Run Tests"
          command: >
            ./etc/scripts/docker/run.sh
            --debug
            --test
            --no-build
      - persist_to_workspace:
          root: /home/circleci
          paths:
            - project

  deploy-nightly:
    environment:
      DOCKER_TAG: chronograf-20240919
      GO111MODULE: "ON"
    machine:
      image: ubuntu-2204:current
    steps:
      - attach_workspace:
          at: /home/circleci
      - run: |
          ./etc/scripts/docker/run.sh \
            --debug \
            --clean \
            --package \
            --platform all \
            --arch all \
            --upload \
            --nightly \
            --version=nightly \
            --bucket=dl.influxdata.com/chronograf/releases
          cp build/linux/static_amd64/chronograf .
          cp build/linux/static_amd64/chronoctl .
          docker build -t chronograf .
          docker login -u "$QUAY_USER" -p $QUAY_PASS quay.io
          docker tag chronograf quay.io/influxdb/chronograf:nightly
          docker push quay.io/influxdb/chronograf:nightly
      - store_artifacts:
          path: ./build/

  deploy-pre-release:
    environment:
      DOCKER_TAG: chronograf-20240919
      GO111MODULE: "ON"
    machine:
      image: ubuntu-2204:current
    steps:
      - attach_workspace:
          at: /home/circleci
      - run: |
          ./etc/scripts/docker/run.sh \
            --clean \
            --debug \
            --release \
            --package \
            --platform all \
            --arch all \
            --upload-overwrite \
            --upload \
            --bucket dl.influxdata.com/chronograf/releases
          cp build/linux/static_amd64/chronograf .
          cp build/linux/static_amd64/chronoctl .
          docker build -t chronograf .
          docker login -u "$QUAY_USER" -p $QUAY_PASS quay.io
          docker tag chronograf quay.io/influxdb/chronograf:${CIRCLE_SHA1:0:7}
          docker push quay.io/influxdb/chronograf:${CIRCLE_SHA1:0:7}
          docker tag chronograf quay.io/influxdb/chronograf:${CIRCLE_TAG}
          docker push quay.io/influxdb/chronograf:${CIRCLE_TAG}
      - store_artifacts:
          path: ./build/
      - persist_to_workspace:
          root: .
          paths:
            - build

  deploy-release:
    environment:
      DOCKER_TAG: chronograf-20240919
      GO111MODULE: "ON"
    machine:
      image: ubuntu-2204:current
    steps:
      - attach_workspace:
          at: /home/circleci
      - run: |
          ./etc/scripts/docker/run.sh \
            --clean \
            --debug \
            --release \
            --package \
            --platform all \
            --arch all \
            --upload-overwrite \
            --upload \
            --bucket dl.influxdata.com/chronograf/releases
          cp build/linux/static_amd64/chronograf .
          cp build/linux/static_amd64/chronoctl .
          docker build -t chronograf .
          docker login -u "$QUAY_USER" -p $QUAY_PASS quay.io
          docker tag chronograf quay.io/influxdb/chronograf:${CIRCLE_SHA1:0:7}
          docker push quay.io/influxdb/chronograf:${CIRCLE_SHA1:0:7}
          docker tag chronograf quay.io/influxdb/chronograf:${CIRCLE_TAG}
          docker push quay.io/influxdb/chronograf:${CIRCLE_TAG}
          docker tag chronograf quay.io/influxdb/chronograf:latest
          docker push quay.io/influxdb/chronograf:latest
      - store_artifacts:
          path: ./build/
      - persist_to_workspace:
          root: .
          paths:
            - build

  packages-sign:
    circleci_ip_ranges: true
    docker:
      - image: quay.io/influxdb/rsign:latest
        auth:
          username: $QUAY_RSIGN_USERNAME
          password: $QUAY_RSIGN_PASSWORD
    steps:
      - add_ssh_keys:
          fingerpints:
            - 92:24:4f:e1:e1:ee:6a:39:22:d7:b5:fa:9e:a9:bf:4b
      - attach_workspace:
          at: /tmp/workspace
      - run: |
          mkdir -p /tmp/workspace/signatures
          find /tmp/workspace/build \
            -type f \(              \
                 -iname '*.deb'     \
              -o -iname '*.rpm'     \
              -o -iname '*.tar.gz'  \
              -o -iname '*.zip'     \
            \) -exec rsign "{}" \; -exec mv "{}.asc" /tmp/workspace/signatures \;
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - signatures
      - store_artifacts:
          path: /tmp/workspace/signatures

  packages-upload-signatures:
    docker:
      - image: cimg/python:3.12.3
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - aws-s3/sync:
          arguments: >
            --exclude '*'
            --include 'chronograf-*.asc'
            --include 'chronograf_*.asc'
            --acl public-read
          aws-region:            AWS_REGION
          aws-access-key-id:     AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          from: /tmp/workspace/signatures/
          to:   s3://dl.influxdata.com/chronograf/releases/
