version: 2.1
orbs:
  browser-tools: circleci/browser-tools@1.1.3

commands:
  influxdb-onboarding:
    steps:
      - run:
          name: "Post onBoarding request to InfluxDB 2"
          command: sh ./etc/scripts/influxdb-onboarding.sh

workflows:
  version: 2
  main:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
      - e2e:
          requires:
            - build
          filters:
            tags:
              only: /.*/
      - deploy-nightly:
          requires:
            - build
          filters:
            branches:
              only: master
      - deploy-pre-release:
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^[0-9]+(\.[0-9]+)*(\S*)([a|rc|beta]([0-9]+))+$/
      - deploy-release:
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^[0-9]+(\.[0-9]+)*$/

jobs:
  build:
    environment:
      DOCKER_TAG: chronograf-20220323
      GO111MODULE: "ON"
    machine:
      image: ubuntu-2004:202201-02
    steps:
      - checkout
      - run: |
          ls -lah
          pwd
      - run: ./etc/scripts/docker/pull.sh
      - run:
          name: "Run Tests"
          command: >
            ./etc/scripts/docker/run.sh
            --debug
            --test
            --no-build
      - persist_to_workspace:
          root: /home/circleci
          paths:
            - project

  #### cypress e2e tests
  e2e:
    docker:
      - image: cimg/go:1.15.6-browsers
      - image: influxdb:2.0
        environment:
          INFLUXD_HTTP_BIND_ADDRESS: :9999
      - image: influxdb:1.8
        environment:
          INFLUXD_HTTP_BIND_ADDRESS: :8086

    environment:
      GOCACHE: /tmp/go-cache
    steps:
      - browser-tools/install-chrome
      - checkout
      - influxdb-onboarding
      - restore_cache:
          name: Restore Yarn Cache
          keys:
            - yarn-deps-lock-{{ checksum "yarn.lock" }}
      - run: sudo apt-get update && sudo apt-get install netcat-openbsd
      - run:
          command: make
      - run:
          command: ./chronograf
          background: true
      - run:
          command: make e2e
      - store_test_results:
          path: ui/cypress-jsunit-results.xml
      - store_artifacts:
          path: ui/cypress/videos
          destination: videos
      - store_artifacts:
          path: ui/cypress/screenshots
          destination: screenshots
      - store_artifacts:
          path: ui/cypress/snapshots
          destination: snapshots

  deploy-nightly:
    environment:
      DOCKER_TAG: chronograf-20220323
      GO111MODULE: "ON"
    machine:
      image: ubuntu-2004:202201-02
    steps:
      - attach_workspace:
          at: /home/circleci
      - run: |
          ./etc/scripts/docker/run.sh \
            --debug \
            --clean \
            --package \
            --platform all \
            --arch all \
            --upload \
            --nightly \
            --version=nightly \
            --bucket=dl.influxdata.com/chronograf/releases
          cp build/linux/static_amd64/chronograf .
          cp build/linux/static_amd64/chronoctl .
          docker build -t chronograf .
          docker login -u "$QUAY_USER" -p $QUAY_PASS quay.io
          docker tag chronograf quay.io/influxdb/chronograf:nightly
          docker push quay.io/influxdb/chronograf:nightly
      - store_artifacts:
          path: ./build/

  deploy-pre-release:
    environment:
      DOCKER_TAG: chronograf-20220323
      GO111MODULE: "ON"
    machine:
      image: ubuntu-2004:202201-02
    steps:
      - attach_workspace:
          at: /home/circleci
      - run: |
          ./etc/scripts/docker/run.sh \
            --clean \
            --debug \
            --release \
            --package \
            --platform all \
            --arch all \
            --upload-overwrite \
            --upload \
            --bucket dl.influxdata.com/chronograf/releases
          cp build/linux/static_amd64/chronograf .
          cp build/linux/static_amd64/chronoctl .
          docker build -t chronograf .
          docker login -u "$QUAY_USER" -p $QUAY_PASS quay.io
          docker tag chronograf quay.io/influxdb/chronograf:${CIRCLE_SHA1:0:7}
          docker push quay.io/influxdb/chronograf:${CIRCLE_SHA1:0:7}
          docker tag chronograf quay.io/influxdb/chronograf:${CIRCLE_TAG}
          docker push quay.io/influxdb/chronograf:${CIRCLE_TAG}
      - store_artifacts:
          path: ./build/

  deploy-release:
    environment:
      DOCKER_TAG: chronograf-20220323
      GO111MODULE: "ON"
    machine:
      image: ubuntu-2004:202201-02
    steps:
      - attach_workspace:
          at: /home/circleci
      - run: |
          ./etc/scripts/docker/run.sh \
            --clean \
            --debug \
            --release \
            --package \
            --platform all \
            --arch all \
            --upload-overwrite \
            --upload \
            --bucket dl.influxdata.com/chronograf/releases
          cp build/linux/static_amd64/chronograf .
          cp build/linux/static_amd64/chronoctl .
          docker build -t chronograf .
          docker login -u "$QUAY_USER" -p $QUAY_PASS quay.io
          docker tag chronograf quay.io/influxdb/chronograf:${CIRCLE_SHA1:0:7}
          docker push quay.io/influxdb/chronograf:${CIRCLE_SHA1:0:7}
          docker tag chronograf quay.io/influxdb/chronograf:${CIRCLE_TAG}
          docker push quay.io/influxdb/chronograf:${CIRCLE_TAG}
          docker tag chronograf quay.io/influxdb/chronograf:latest
          docker push quay.io/influxdb/chronograf:latest
      - store_artifacts:
          path: ./build/
